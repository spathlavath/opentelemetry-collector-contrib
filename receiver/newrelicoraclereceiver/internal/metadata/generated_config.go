// Code generated by mdatagen. DO NOT EDIT.

package metadata

import (
	"go.opentelemetry.io/collector/confmap"
	"go.opentelemetry.io/collector/filter"
)

// MetricConfig provides common config for a particular metric.
type MetricConfig struct {
	Enabled bool `mapstructure:"enabled"`

	enabledSetByUser bool
}

func (ms *MetricConfig) Unmarshal(parser *confmap.Conf) error {
	if parser == nil {
		return nil
	}
	err := parser.Unmarshal(ms)
	if err != nil {
		return err
	}
	ms.enabledSetByUser = parser.IsSet("enabled")
	return nil
}

// MetricsConfig provides config for newrelicoracledb metrics.
type MetricsConfig struct {
	NewrelicoracledbConcurrencyEnqueueRoFastObjectReuse      MetricConfig `mapstructure:"newrelicoracledb.concurrency.enqueue_ro_fast_object_reuse"`
	NewrelicoracledbConcurrencyReadByOtherSession            MetricConfig `mapstructure:"newrelicoracledb.concurrency.read_by_other_session"`
	NewrelicoracledbIoControlFileParallelWrite               MetricConfig `mapstructure:"newrelicoracledb.io.control_file_parallel_write"`
	NewrelicoracledbIoControlFileSequentialRead              MetricConfig `mapstructure:"newrelicoracledb.io.control_file_sequential_read"`
	NewrelicoracledbIoDataFileInitWrite                      MetricConfig `mapstructure:"newrelicoracledb.io.data_file_init_write"`
	NewrelicoracledbIoDbFileScatteredRead                    MetricConfig `mapstructure:"newrelicoracledb.io.db_file_scattered_read"`
	NewrelicoracledbIoDbFileSequentialRead                   MetricConfig `mapstructure:"newrelicoracledb.io.db_file_sequential_read"`
	NewrelicoracledbIoDiskFileOperations                     MetricConfig `mapstructure:"newrelicoracledb.io.disk_file_operations"`
	NewrelicoracledbIoLocalWriteWait                         MetricConfig `mapstructure:"newrelicoracledb.io.local_write_wait"`
	NewrelicoracledbLockedAccounts                           MetricConfig `mapstructure:"newrelicoracledb.locked_accounts"`
	NewrelicoracledbRedoLogLogFileSwitch                     MetricConfig `mapstructure:"newrelicoracledb.redo_log.log_file_switch"`
	NewrelicoracledbRedoLogLogFileSwitchArchivingNeeded      MetricConfig `mapstructure:"newrelicoracledb.redo_log.log_file_switch_archiving_needed"`
	NewrelicoracledbRedoLogLogFileSwitchCheckpointIncomplete MetricConfig `mapstructure:"newrelicoracledb.redo_log.log_file_switch_checkpoint_incomplete"`
	NewrelicoracledbRedoLogSync                              MetricConfig `mapstructure:"newrelicoracledb.redo_log.sync"`
	NewrelicoracledbRedoLogWaits                             MetricConfig `mapstructure:"newrelicoracledb.redo_log.waits"`
	NewrelicoracledbSessionsCount                            MetricConfig `mapstructure:"newrelicoracledb.sessions.count"`
	NewrelicoracledbSgaBufferBusyWaits                       MetricConfig `mapstructure:"newrelicoracledb.sga.buffer_busy_waits"`
	NewrelicoracledbSgaFreeBufferInspected                   MetricConfig `mapstructure:"newrelicoracledb.sga.free_buffer_inspected"`
	NewrelicoracledbSgaFreeBufferWaits                       MetricConfig `mapstructure:"newrelicoracledb.sga.free_buffer_waits"`
	NewrelicoracledbSynchronizationDirectPathSync            MetricConfig `mapstructure:"newrelicoracledb.synchronization.direct_path_sync"`
	NewrelicoracledbTablespaceDbID                           MetricConfig `mapstructure:"newrelicoracledb.tablespace.db_id"`
	NewrelicoracledbTablespaceGlobalName                     MetricConfig `mapstructure:"newrelicoracledb.tablespace.global_name"`
	NewrelicoracledbTablespaceIsOffline                      MetricConfig `mapstructure:"newrelicoracledb.tablespace.is_offline"`
	NewrelicoracledbTablespaceOfflineCdbDatafiles            MetricConfig `mapstructure:"newrelicoracledb.tablespace.offline_cdb_datafiles"`
	NewrelicoracledbTablespaceOfflinePdbDatafiles            MetricConfig `mapstructure:"newrelicoracledb.tablespace.offline_pdb_datafiles"`
	NewrelicoracledbTablespacePdbNonWriteMode                MetricConfig `mapstructure:"newrelicoracledb.tablespace.pdb_non_write_mode"`
	NewrelicoracledbTablespaceSpaceConsumedBytes             MetricConfig `mapstructure:"newrelicoracledb.tablespace.space_consumed_bytes"`
	NewrelicoracledbTablespaceSpaceReservedBytes             MetricConfig `mapstructure:"newrelicoracledb.tablespace.space_reserved_bytes"`
	NewrelicoracledbTablespaceSpaceUsedPercentage            MetricConfig `mapstructure:"newrelicoracledb.tablespace.space_used_percentage"`
}

func DefaultMetricsConfig() MetricsConfig {
	return MetricsConfig{
		NewrelicoracledbConcurrencyEnqueueRoFastObjectReuse: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbConcurrencyReadByOtherSession: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbIoControlFileParallelWrite: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbIoControlFileSequentialRead: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbIoDataFileInitWrite: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbIoDbFileScatteredRead: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbIoDbFileSequentialRead: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbIoDiskFileOperations: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbIoLocalWriteWait: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbLockedAccounts: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbRedoLogLogFileSwitch: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbRedoLogLogFileSwitchArchivingNeeded: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbRedoLogLogFileSwitchCheckpointIncomplete: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbRedoLogSync: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbRedoLogWaits: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbSessionsCount: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbSgaBufferBusyWaits: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbSgaFreeBufferInspected: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbSgaFreeBufferWaits: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbSynchronizationDirectPathSync: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbTablespaceDbID: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbTablespaceGlobalName: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbTablespaceIsOffline: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbTablespaceOfflineCdbDatafiles: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbTablespaceOfflinePdbDatafiles: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbTablespacePdbNonWriteMode: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbTablespaceSpaceConsumedBytes: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbTablespaceSpaceReservedBytes: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbTablespaceSpaceUsedPercentage: MetricConfig{
			Enabled: true,
		},
	}
}

// ResourceAttributeConfig provides common config for a particular resource attribute.
type ResourceAttributeConfig struct {
	Enabled bool `mapstructure:"enabled"`
	// Experimental: MetricsInclude defines a list of filters for attribute values.
	// If the list is not empty, only metrics with matching resource attribute values will be emitted.
	MetricsInclude []filter.Config `mapstructure:"metrics_include"`
	// Experimental: MetricsExclude defines a list of filters for attribute values.
	// If the list is not empty, metrics with matching resource attribute values will not be emitted.
	// MetricsInclude has higher priority than MetricsExclude.
	MetricsExclude []filter.Config `mapstructure:"metrics_exclude"`

	enabledSetByUser bool
}

func (rac *ResourceAttributeConfig) Unmarshal(parser *confmap.Conf) error {
	if parser == nil {
		return nil
	}
	err := parser.Unmarshal(rac)
	if err != nil {
		return err
	}
	rac.enabledSetByUser = parser.IsSet("enabled")
	return nil
}

// ResourceAttributesConfig provides config for newrelicoracledb resource attributes.
type ResourceAttributesConfig struct {
	HostName                     ResourceAttributeConfig `mapstructure:"host.name"`
	NewrelicoracledbInstanceName ResourceAttributeConfig `mapstructure:"newrelicoracledb.instance.name"`
}

func DefaultResourceAttributesConfig() ResourceAttributesConfig {
	return ResourceAttributesConfig{
		HostName: ResourceAttributeConfig{
			Enabled: true,
		},
		NewrelicoracledbInstanceName: ResourceAttributeConfig{
			Enabled: true,
		},
	}
}

// MetricsBuilderConfig is a configuration for newrelicoracledb metrics builder.
type MetricsBuilderConfig struct {
	Metrics            MetricsConfig            `mapstructure:"metrics"`
	ResourceAttributes ResourceAttributesConfig `mapstructure:"resource_attributes"`
}

func DefaultMetricsBuilderConfig() MetricsBuilderConfig {
	return MetricsBuilderConfig{
		Metrics:            DefaultMetricsConfig(),
		ResourceAttributes: DefaultResourceAttributesConfig(),
	}
}

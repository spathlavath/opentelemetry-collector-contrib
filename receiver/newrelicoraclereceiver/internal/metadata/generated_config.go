// Code generated by mdatagen. DO NOT EDIT.

package metadata

import (
	"go.opentelemetry.io/collector/confmap"
	"go.opentelemetry.io/collector/filter"
)

// MetricConfig provides common config for a particular metric.
type MetricConfig struct {
	Enabled bool `mapstructure:"enabled"`

	enabledSetByUser bool
}

func (ms *MetricConfig) Unmarshal(parser *confmap.Conf) error {
	if parser == nil {
		return nil
	}
	err := parser.Unmarshal(ms)
	if err != nil {
		return err
	}
	ms.enabledSetByUser = parser.IsSet("enabled")
	return nil
}

// MetricsConfig provides config for newrelicoracledb metrics.
type MetricsConfig struct {
	NewrelicoracledbPdbCPUUsagePerSecond                     MetricConfig `mapstructure:"newrelicoracledb.pdb.cpu.usage_per_second"`
	NewrelicoracledbPdbCPUUsagePerTransaction                MetricConfig `mapstructure:"newrelicoracledb.pdb.cpu.usage_per_transaction"`
	NewrelicoracledbPdbDatabaseCPUTimeRatio                  MetricConfig `mapstructure:"newrelicoracledb.pdb.database.cpu_time_ratio"`
	NewrelicoracledbPdbDatabaseWaitTimeRatio                 MetricConfig `mapstructure:"newrelicoracledb.pdb.database.wait_time_ratio"`
	NewrelicoracledbPdbExecutionsPerSecond                   MetricConfig `mapstructure:"newrelicoracledb.pdb.executions.per_second"`
	NewrelicoracledbPdbExecutionsPerTransaction              MetricConfig `mapstructure:"newrelicoracledb.pdb.executions.per_transaction"`
	NewrelicoracledbPdbNetworkTrafficVolumePerSecond         MetricConfig `mapstructure:"newrelicoracledb.pdb.network.traffic_volume_per_second"`
	NewrelicoracledbPdbPhysicalReadsBytesPerSecond           MetricConfig `mapstructure:"newrelicoracledb.pdb.physical_reads.bytes_per_second"`
	NewrelicoracledbPdbResponseTimeSQLService                MetricConfig `mapstructure:"newrelicoracledb.pdb.response_time.sql_service"`
	NewrelicoracledbPdbSessionsActiveParallel                MetricConfig `mapstructure:"newrelicoracledb.pdb.sessions.active_parallel"`
	NewrelicoracledbPdbSessionsActiveSerial                  MetricConfig `mapstructure:"newrelicoracledb.pdb.sessions.active_serial"`
	NewrelicoracledbPdbSessionsAverageActive                 MetricConfig `mapstructure:"newrelicoracledb.pdb.sessions.average_active"`
	NewrelicoracledbPdbSessionsCount                         MetricConfig `mapstructure:"newrelicoracledb.pdb.sessions.count"`
	NewrelicoracledbPdbSessionsCurrentLogons                 MetricConfig `mapstructure:"newrelicoracledb.pdb.sessions.current_logons"`
	NewrelicoracledbPdbSessionsCurrentOpenCursors            MetricConfig `mapstructure:"newrelicoracledb.pdb.sessions.current_open_cursors"`
	NewrelicoracledbPdbTransactionsPerSecond                 MetricConfig `mapstructure:"newrelicoracledb.pdb.transactions.per_second"`
	NewrelicoracledbRedoLogLogFileSwitch                     MetricConfig `mapstructure:"newrelicoracledb.redo_log.log_file_switch"`
	NewrelicoracledbRedoLogLogFileSwitchArchivingNeeded      MetricConfig `mapstructure:"newrelicoracledb.redo_log.log_file_switch_archiving_needed"`
	NewrelicoracledbRedoLogLogFileSwitchCheckpointIncomplete MetricConfig `mapstructure:"newrelicoracledb.redo_log.log_file_switch_checkpoint_incomplete"`
	NewrelicoracledbRedoLogLogFileSync                       MetricConfig `mapstructure:"newrelicoracledb.redo_log.log_file_sync"`
	NewrelicoracledbRedoLogWaits                             MetricConfig `mapstructure:"newrelicoracledb.redo_log.waits"`
	NewrelicoracledbSessionsCount                            MetricConfig `mapstructure:"newrelicoracledb.sessions.count"`
	NewrelicoracledbSgaBufferBusyWaits                       MetricConfig `mapstructure:"newrelicoracledb.sga.buffer_busy_waits"`
	NewrelicoracledbSgaFreeBufferInspected                   MetricConfig `mapstructure:"newrelicoracledb.sga.free_buffer_inspected"`
	NewrelicoracledbSgaFreeBufferWaits                       MetricConfig `mapstructure:"newrelicoracledb.sga.free_buffer_waits"`
}

func DefaultMetricsConfig() MetricsConfig {
	return MetricsConfig{
		NewrelicoracledbPdbCPUUsagePerSecond: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbPdbCPUUsagePerTransaction: MetricConfig{
			Enabled: false,
		},
		NewrelicoracledbPdbDatabaseCPUTimeRatio: MetricConfig{
			Enabled: false,
		},
		NewrelicoracledbPdbDatabaseWaitTimeRatio: MetricConfig{
			Enabled: false,
		},
		NewrelicoracledbPdbExecutionsPerSecond: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbPdbExecutionsPerTransaction: MetricConfig{
			Enabled: false,
		},
		NewrelicoracledbPdbNetworkTrafficVolumePerSecond: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbPdbPhysicalReadsBytesPerSecond: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbPdbResponseTimeSQLService: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbPdbSessionsActiveParallel: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbPdbSessionsActiveSerial: MetricConfig{
			Enabled: false,
		},
		NewrelicoracledbPdbSessionsAverageActive: MetricConfig{
			Enabled: false,
		},
		NewrelicoracledbPdbSessionsCount: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbPdbSessionsCurrentLogons: MetricConfig{
			Enabled: false,
		},
		NewrelicoracledbPdbSessionsCurrentOpenCursors: MetricConfig{
			Enabled: false,
		},
		NewrelicoracledbPdbTransactionsPerSecond: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbRedoLogLogFileSwitch: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbRedoLogLogFileSwitchArchivingNeeded: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbRedoLogLogFileSwitchCheckpointIncomplete: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbRedoLogLogFileSync: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbRedoLogWaits: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbSessionsCount: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbSgaBufferBusyWaits: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbSgaFreeBufferInspected: MetricConfig{
			Enabled: true,
		},
		NewrelicoracledbSgaFreeBufferWaits: MetricConfig{
			Enabled: true,
		},
	}
}

// ResourceAttributeConfig provides common config for a particular resource attribute.
type ResourceAttributeConfig struct {
	Enabled bool `mapstructure:"enabled"`
	// Experimental: MetricsInclude defines a list of filters for attribute values.
	// If the list is not empty, only metrics with matching resource attribute values will be emitted.
	MetricsInclude []filter.Config `mapstructure:"metrics_include"`
	// Experimental: MetricsExclude defines a list of filters for attribute values.
	// If the list is not empty, metrics with matching resource attribute values will not be emitted.
	// MetricsInclude has higher priority than MetricsExclude.
	MetricsExclude []filter.Config `mapstructure:"metrics_exclude"`

	enabledSetByUser bool
}

func (rac *ResourceAttributeConfig) Unmarshal(parser *confmap.Conf) error {
	if parser == nil {
		return nil
	}
	err := parser.Unmarshal(rac)
	if err != nil {
		return err
	}
	rac.enabledSetByUser = parser.IsSet("enabled")
	return nil
}

// ResourceAttributesConfig provides config for newrelicoracledb resource attributes.
type ResourceAttributesConfig struct {
	HostName                     ResourceAttributeConfig `mapstructure:"host.name"`
	NewrelicoracledbInstanceName ResourceAttributeConfig `mapstructure:"newrelicoracledb.instance.name"`
}

func DefaultResourceAttributesConfig() ResourceAttributesConfig {
	return ResourceAttributesConfig{
		HostName: ResourceAttributeConfig{
			Enabled: true,
		},
		NewrelicoracledbInstanceName: ResourceAttributeConfig{
			Enabled: true,
		},
	}
}

// MetricsBuilderConfig is a configuration for newrelicoracledb metrics builder.
type MetricsBuilderConfig struct {
	Metrics            MetricsConfig            `mapstructure:"metrics"`
	ResourceAttributes ResourceAttributesConfig `mapstructure:"resource_attributes"`
}

func DefaultMetricsBuilderConfig() MetricsBuilderConfig {
	return MetricsBuilderConfig{
		Metrics:            DefaultMetricsConfig(),
		ResourceAttributes: DefaultResourceAttributesConfig(),
	}
}
